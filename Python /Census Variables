You have decided to volunteer for your local community by offering to clean their recently collected census data. 
The description of this dataset is as follows:

- first_name --> the respondent's first name
- last_name --> the respondent's last name
- birth_year --> the responden's year of birth
- voted --> if the responded participated in the current voting cycle
- num_children --> the number of children the respondent has
- income_year --> the average yearly income the respondent earns
- higher_tax --> The respondent’s answer to the question: “Rate your agreement with the statement: the wealthy should pay higher taxes.”
- marital_status --> the respondent's current marital status

Note: the dataframe is composed of simulated census data to represent demographics of a small community in the US.

# Import pandas with alias
import pandas as pd
import numpy as np

# Read in the census dataframe
census = pd.read_csv('census_data.csv', index_col=0)
print(census.head())

|   | first_name | last_name | birth_year |	voted |	num_children |	income_year |	higher_tax    |	marital_status |
| - | ---------- | --------- | ---------- | ----- | ------------ | ------------ | ------------- | ---------------|
| 0 |	Denise     | Ratke	   | 2005	      | False	| 0	           | 92129.41	    | disagree	    | single         |
| 1 |	Hali	     | Cummerata | 1987	      | False	| 0	           | 75649.17	    | neutral	      | divorced       |
| 2	| Salomon	   | Orn	     | 1992	      | True	| 2	           | 166313.45	  | agree	        | single         |
| 3 |	Sarina	   | Schiller  | 1965	      | False	| 2	           | 71704.81	    | strongly agree| married        |
| 4 |	Gust       | Abernathy | 1945	      | False	| 2	           | 143316.08	  | agree	        | married        |

# Data types

- first_name --> object
- last_name --> object
- birth_year --> object
- voted --> bool
- num_children --> int64
- income_year --> float64
- higher_tax --> object
- marital_status --> object

## INSPECT THE DATA
## Calculations with birth year
# Unique birth years

print(census['birth_year'].unique())

dtype: object
['2005' '1987' '1992' '1965' '1945' '1951' '1963' '1949' '1950' '1971'
 '2007' '1944' '1995' '1973' '1946' '1954' '1994' '1989' '1947' '1993'
 '1976' '1984' 'missing' '1966' '1941' '2000' '1953' '1956' '1960' '2001'
 '1980' '1955' '1985' '1996' '1968' '1979' '2006' '1962' '1981' '1959'
 '1977' '1978' '1983' '1957' '1961' '1982' '2002' '1998' '1999' '1952'
 '1940' '1986' '1958']

# Missing value --> after research, the missing value is 1967

census['birth_year'] = census['birth_year'].replace(['missing'], 1967)
print(census['birth_year'].unique())

['2005' '1987' '1992' '1965' '1945' '1951' '1963' '1949' '1950' '1971'
 '2007' '1944' '1995' '1973' '1946' '1954' '1994' '1989' '1947' '1993'
 '1976' '1984' 1967 '1966' '1941' '2000' '1953' '1956' '1960' '2001'
 '1980' '1955' '1985' '1996' '1968' '1979' '2006' '1962' '1981' '1959'
 '1977' '1978' '1983' '1957' '1961' '1982' '2002' '1998' '1999' '1952'
 '1940' '1986' '1958']

# Change data type from object to int

census['birth_year'] = census['birth_year'].astype(int)
print(census.dtypes)

first_name         object
last_name          object
birth_year          int64
voted                bool
num_children        int64
income_year       float64
higher_tax         object
marital_status     object

# Calculate the average birth year of the respondents

birth_year_average = census['birth_year'].mean()
print(birth_year_average)

mean = 1973.4

## Create a categorical value for higher_tax so that strongly disagree < disagree < neutral < agree < strongly agree

census['higher_tax'] = pd.Categorical(census['higher_tax'], ['strongly disagree', 'disagree', 'neutral', 'agree', 'strongly agree'], ordered = True)
print(census['higher_tax'].unique())

[disagree, neutral, agree, strongly agree, strongly disagree]
Categories (5, object): [strongly disagree < disagree < neutral < agree < strongly agree]

# Median sentiment of respondents about higher_tax

census['higher_tax'] = census['higher_tax'].cat.codes
print(census['higher_tax'].median())

median --> 2.0

## OHE marital_status to create binary variables.

marital_status = pd.get_dummies(data = census, columns = ['marital_status'])
print(marital_status.head())

	first_name	last_name	birth_year	voted	num_children	income_year	higher_tax	marital_status_divorced	marital_status_married	marital_status_single	marital_status_widowed
0	Denise	Ratke	2005	False	0	92129.41	1	0	0	1	0
1	Hali	Cummerata	1987	False	0	75649.17	2	1	0	0	0
2	Salomon	Orn	1992	True	2	166313.45	3	0	0	1	0
3	Sarina	Schiller	1965	False	2	71704.81	4	0	1	0	0
4	Gust	Abernathy	1945	False	2	143316.08	3	0	1	0	0
